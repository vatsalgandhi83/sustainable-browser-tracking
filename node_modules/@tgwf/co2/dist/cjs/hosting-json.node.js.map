{
  "version": 3,
  "sources": ["../../src/hosting-json.node.js"],
  "sourcesContent": ["\"use strict\";\n\nimport fs from \"fs\";\nimport zlib from \"zlib\";\nimport { promisify } from \"util\";\n\nconst readFile = promisify(fs.readFile);\nconst gunzip = promisify(zlib.gunzip);\n\n/**\n * Converts a readable stream to a string.\n * @param {ReadableStream} stream - The readable stream to convert.\n * @returns {Promise<string>} A promise that resolves to the string representation of the stream.\n */\nasync function streamToString(stream) {\n  return new Promise((resolve, reject) => {\n    const chunks = [];\n    stream.on(\"error\", reject);\n    stream.on(\"data\", (chunk) => chunks.push(chunk));\n    stream.on(\"end\", () => resolve(Buffer.concat(chunks)));\n  });\n}\n\n/**\n * Get the contents of a gzipped file as a JSON string.\n * @param {string} jsonPath - The path to the gzipped JSON file.\n * @returns {Promise<string>} A promise that resolves to the JSON string.\n */\nasync function getGzippedFileAsJson(jsonPath) {\n  const readStream = fs.createReadStream(jsonPath);\n  const text = await streamToString(readStream);\n  const unzipped = await gunzip(text);\n  return unzipped.toString();\n}\n\n/**\n * Loads JSON data from a file path.\n * @param {string} jsonPath - The path to the JSON file.\n * @returns {Promise<object>} A promise that resolves to the parsed JSON object.\n */\nasync function loadJSON(jsonPath) {\n  const jsonBuffer = jsonPath.endsWith(\".gz\")\n    ? await getGzippedFileAsJson(jsonPath)\n    : await readFile(jsonPath);\n  return JSON.parse(jsonBuffer);\n}\n\nmodule.exports = {\n  loadJSON,\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAEA,gBAAe;AACf,kBAAiB;AACjB,kBAA0B;AAE1B,MAAM,eAAW,uBAAU,UAAAA,QAAG,QAAQ;AACtC,MAAM,aAAS,uBAAU,YAAAC,QAAK,MAAM;AAOpC,eAAe,eAAe,QAAQ;AACpC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,SAAS,CAAC;AAChB,WAAO,GAAG,SAAS,MAAM;AACzB,WAAO,GAAG,QAAQ,CAAC,UAAU,OAAO,KAAK,KAAK,CAAC;AAC/C,WAAO,GAAG,OAAO,MAAM,QAAQ,OAAO,OAAO,MAAM,CAAC,CAAC;AAAA,EACvD,CAAC;AACH;AAOA,eAAe,qBAAqB,UAAU;AAC5C,QAAM,aAAa,UAAAD,QAAG,iBAAiB,QAAQ;AAC/C,QAAM,OAAO,MAAM,eAAe,UAAU;AAC5C,QAAM,WAAW,MAAM,OAAO,IAAI;AAClC,SAAO,SAAS,SAAS;AAC3B;AAOA,eAAe,SAAS,UAAU;AAChC,QAAM,aAAa,SAAS,SAAS,KAAK,IACtC,MAAM,qBAAqB,QAAQ,IACnC,MAAM,SAAS,QAAQ;AAC3B,SAAO,KAAK,MAAM,UAAU;AAC9B;AAEA,OAAO,UAAU;AAAA,EACf;AACF;",
  "names": ["fs", "zlib"]
}
